AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  montycloud-assignmentapp

  Sample SAM Template for uploading images and creating thumbnails

Globals:
  Api:
    BinaryMediaTypes:
      - "multipart/form-data"
      - "image/jpeg"
      - "image/png"
      - "image/jpg"
      - "application/json"
  Function:
    Timeout: 10
    LoggingConfig:
      LogFormat: JSON

Resources:
  ImageUploadFunction:
    Type: AWS::Serverless::Function
    Properties: 
      Handler: app.lambda_handler
      CodeUri: ./src
      Runtime: python3.12
      MemorySize: 128
      Timeout: 30
      Environment:
        Variables:
          BUCKET_NAME: !Ref ImageBucket
      Policies:
        - S3WritePolicy:
            BucketName: !Ref ImageBucket
      Events:
        ApiGatewayUpload:
          Type: Api
          Properties:
            Path: /upload
            Method: POST

  ThumbnailTriggerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./src
      Description: ''
      MemorySize: 128
      Timeout: 60
      Handler: app.lambda_handler
      Runtime: python3.12
      Architectures:
        - x86_64
      EphemeralStorage:
        Size: 512
      EventInvokeConfig:
        MaximumEventAgeInSeconds: 21600
        MaximumRetryAttempts: 2
      PackageType: Zip
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource:
                - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ThumbnailTriggerFunction:*

      Events:
        BucketEvent1:
          Type: S3
          Properties:
            Bucket:
              Ref: ImageBucket
            Events:
              - s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                  - Name: prefix
                    Value: images


  ImageBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  BucketPolicy1:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ImageBucket
      PolicyDocument:
        Statement:
          - Action: "s3:*"
            Effect: Deny
            Principal: '*'
            Resource:
              - !Sub arn:aws:s3:::${ImageBucket}/*
              - !Sub arn:aws:s3:::${ImageBucket}
            Condition:
              Bool:
                aws:SecureTransport: false
    DependsOn: ImageBucket


Outputs:
  ImageUploadApi:
    Description: "API Gateway endpoint to upload images"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/upload"